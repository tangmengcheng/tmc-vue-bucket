{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/compiler/parser-html.js","../src/compiler/index.js","../src/observe/watcher.js","../src/vdom/patch.js","../src/lifecycle.js","../src/init.js","../src/vdom/create-element.js","../src/render.js","../src/index.js"],"sourcesContent":["// 重新数组中的部分方法\n\nlet oldArrayProto = Array.prototype // 获取数组的原型\n\n// Array.prototype.push = function() { 这样会把原来的push功能干掉了，我们需要原来的功能还在，此时我们可以拷贝一份\n// }\n\n// newArrayProto.__proto__ = oldArrayProto\nexport let newArrayProto = Object.create(oldArrayProto)\n\nlet methods = [\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'reserve',\n    'sort',\n    'splice'\n] // concat slice都不会改变原数组\n\nmethods.forEach(method => {\n    newArrayProto[method] = function (...args) { // 重写了数组的方法\n        const result = oldArrayProto[method].call(this, ...args) // 内部调用原来的方法，函数劫持。AOP\n        // this 就是 data\n        // 需要对新增的数据 再次进行劫持\n        let inserted;\n        let ob = this.__ob__\n        switch (method) {\n            case 'push':\n            case 'unshift': // arr.push(1, 2, 3)\n                inserted = args\n                break;\n            case 'splice': // arr.splice(0, 1, {}, {}...)\n                inserted = args.slice(2)\n            default:\n                break;\n        }\n        // console.log('inserted', inserted) // 新增的内容\n        if (inserted) { // inserted是数组类型，观察数组，要调用observeArray方法\n            ob.observeArray(inserted)\n        }\n        return result\n    }\n})","import {\n    newArrayProto\n} from \"./array\"\n\nclass Observer {\n    constructor(data) {\n        // data.__ob__ = this; // this为observe,放在data的自定义__ob__属性上;这样的好处：给数组加了一个标识，如果数据上有__ob__，说明数据已经被观察过了\n\n        // 如果data不是数组是对象，这样给对象添加这个__ob__属性，然后去循环，会出现死循环\n\n        Object.defineProperty(data, '__ob__', {\n            value: this,\n            enumerable: false // 不可枚举（循环的时候，无法获取）\n        })\n\n\n        // Object.defineProperty只能劫持已存在的属性，对新增属性和删除属性不劫持（为此vue2单独写了一些API来解决$set $delete）\n        if (Array.isArray(data)) { // 如果是数组就有两种情况：第一：重写7个方法、第二：数组中的引用类型也需要劫持\n            // 重新数组中的方法，7个方法可以修改数组本身的。还有将数组中的引用类型也需要劫持\n            // data.__proto__ = { 不采用这种方式是因为会把原始的push给干掉了\n            //     push() {\n            //         console.log('重写的push')\n            //     }\n            data.__proto__ = newArrayProto // 拦截方法，并没有对新增的属性做劫持？\n            // } 保留数组原有的特性：concat join等，并且重新部分的方法\n            this.observeArray(data)\n        } else {\n            this.walk(data) // 遍历对象\n        }\n    }\n    walk(data) { // 循环对象 对属性依次劫持\n        // 拿到每个属性，“重新定义”每个属性，导致性能不好\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\n    }\n    observeArray(data) { // 将数组中的引用类型也需要劫持\n        data.forEach(item => observe(item))\n    }\n}\n\n// 闭包（get set方法 都能拿到value）\nexport function defineReactive(target, key, value) { // 属性劫持\n    observe(value) // value可能是对象，递归劫持。对所有的对象属性进行劫持\n    Object.defineProperty(target, key, {\n        get() { // 取值的时候会执行get\n            console.log('取值了')\n            return value\n        },\n        set(newVal) { // 设置值的时候会执行set\n            console.log('设置值了')\n            if (newVal === value) return\n            observe(newVal) // 有可能用户设置的值也是对象\n            value = newVal\n        }\n    })\n}\n\nexport function observe(data) {\n    // 对这个data对象进行劫持\n    if (typeof data !== 'object' || data === null) {\n        return // 只对对象进行劫持\n    }\n\n    if (data.__ob__ instanceof Observer) { // 说明这个对象已经被代理过了\n        return data.__ob__\n    }\n\n    // 如果一个对象被劫持过了，那就不要再被劫持了（如何判断一个对象是否被劫持过？可以新增一个实例，用实例来判断是否被劫持过）\n    return new Observer(data)\n}","import {\n    observe\n} from \"./observe/index.js\"\n\nexport function initState(vm) {\n    const opts = vm.$options\n    if (opts.data) {\n        initData(vm)\n    }\n}\n\nfunction proxy(vm, target, key) {\n    Object.defineProperty(vm, key, {\n        get() {\n            return vm[target][key] // vm.name === vm._data.name\n        },\n        set(newVal) {\n            vm[target][key] = newVal\n        }\n    })\n}\n\nfunction initData(vm) {\n    let data = vm.$options.data\n    data = typeof data === 'function' ? data.call(vm) : data\n\n    vm._data = data // 在实例上可以获取数据\n\n    // 拿到数据后，要对数据劫持。vue2里采用了一个api, defineProperty\n    observe(data) // 观测数据，单独\n\n    // 将vm._data用vm代理\n    for (let key in data) {\n        proxy(vm, '_data', key)\n    }\n}","// ?: 匹配不捕获\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ // 匹配属性的\n// const dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+?\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*` // abc-aaa\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})` // <aaa:asasas>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 标签开头的正则  捕获的内容是标签名\n// const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // {{}}\n// const regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g\n\nconst startTagClose = /^\\s*(\\/?)>/ // 匹配标签结束的 > <div >\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // 匹配标签结尾的</div>\n// const doctype = /^<!DOCTYPE [^>]+>/i\n// // #7298: escape - to avoid being passed as HTML comment when inlined in page\n// const comment = /^<!\\--/\n// const conditionalComment = /^<!\\[/ // 解析是否是条件注释\n\n// 拿到这些标签了后就需要生成一个树，AST树就有树根\nlet root = null // ast语法树的树根\nlet currentParent // 标识当前父亲是谁\n// 面试题：我怎么知道标签正常关闭了？\n// 【div, p, span】\nlet stack = []\nconst ELEMENT_TYPE = 1 // 元素\nconst TEXT_TYPE = 3 // 文本\n\n// 创建语法树的方法\nfunction createASTElement(tagName, attrs) {\n    return {\n        tag: tagName,\n        type: ELEMENT_TYPE,\n        children: [],\n        attrs,\n        parent: null\n    }\n}\n// 把我需要的内容收集起来\n// 开始\nfunction start(tagName, attrs) {\n    console.log('开始标签：', tagName, '属性是：', attrs)\n    // 遇到开始标签  就创建一个ast元素\n    let element = createASTElement(tagName, attrs)\n    if (!root) {\n        root = element\n    }\n    currentParent = element // 把当前元素标记为父ast树\n    stack.push(element) // 将开始标签存入栈中\n}\n\n// 文本\nfunction chars(text) {\n    console.log('文本是：', text)\n    text = text.replace(/\\s/g, '')\n    if (text) {\n        currentParent.children.push({\n            text,\n            type: TEXT_TYPE\n        })\n    }\n}\n\n// 标签闭合\nfunction end(tagName) {\n    console.log('结束标签：', tagName)\n    let element = stack.pop()\n    // 要标识当前这个p是属于这个div的儿子的\n    currentParent = stack[stack.length - 1]\n    if (currentParent) {\n        element.parent = currentParent\n        currentParent.children.push(element) // 实现了一个树的父子关系\n    }\n}\n\nexport function parseHTML(html) {\n    // 不停地的解析HTML字符串\n    while (html) {\n        let textEnd = html.indexOf('<')\n        if (textEnd === 0) {\n            // 如果当前索引为0 肯定是一个标签，（开始标签、结束标签）\n            let startTagMatch = parseStartTag() // 通过这个方法获取到匹配的结果，tagName attrs\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs) // 1、解析开始标签\n                continue // 如果开始标签匹配完毕后，继续下一次\n            }\n            // 如果没有匹配到开始标签  可能匹配结束标签\n            let endTagMatch = html.match(endTag) // 结束标签（没有属性）\n            if (endTagMatch) {\n                advance(endTagMatch[0].length)\n                end(endTagMatch[1]) // 2、解析结束标签\n                continue\n            }\n            // 。。。注解节点，特殊元素style。。。\n        }\n        let text\n        if (textEnd >= 0) { // 有可能有空格，默认说它是文本\n            text = html.substring(0, textEnd) // 截取空格文本\n        }\n        if (text) {\n            advance(text.length) // 去掉空的字符串\n            chars(text) // 3、解析文本\n        }\n    }\n\n    function advance(n) {\n        html = html.substring(n) // 默认从当前位置截取到最后\n    }\n\n    function parseStartTag() {\n        let start = html.match(startTagOpen)\n        if (start) { // 如果匹配到\n            const match = {\n                tagName: start[1],\n                attrs: []\n            }\n            advance(start[0].length) // 将标签删除\n            // console.log(html)\n            // 需要判断标签有没有属性，有属性就解析属性，没有属性就不解析，属性有可能多个，就需要循环去取\n            // html.match(startTagClose)如果匹配到结束标签\n            let end, attr\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                advance(attr[0].length) // 将属性删除\n                match.attrs.push({\n                    name: attr[1],\n                    value: attr[3] || attr[4] || attr[5]\n                })\n            }\n            if (end) {\n                advance(end[0].length) // 去掉开始标签的 > \n                return match\n            }\n            // console.log(html, match)\n        }\n    }\n\n    return root\n}","// ast抽象语法树 是用对象来描述原生语法的  虚拟dom 用对象来描述dom节点\n\nimport {\n    parseHTML\n} from \"./parser-html\"\n\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // {{}}\n\n// 处理属性  拼接成属性字符串\nfunction getProps(attrs) { // [{name: 'id', value: 'app'}, {}]\n    let str = ''\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i]\n        if (attr.name === 'style') {\n            // style=\"color: red;fontSize: 14px;\"  => {style: {color: 'red'}} 为了diff\n            let obj = {}\n            attr.value.split(';').forEach(item => {\n                let [key, value] = item.split(':')\n                obj[key] = value\n            })\n            attr.value = obj\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0, -1)}}` // 删除最后一个逗号\n}\n\nfunction genChildren(el) {\n    let children = el.children\n    if (children && children.length > 0) {\n        return `${children.map(c => gen(c)).join(',')}` // 把一个个孩子生成字符串\n    } else { // 没有孩子\n        return false\n    }\n}\n\nfunction gen(node) {\n    if (node.type === 1) {\n        // 元素标签\n        return generate(node)\n    } else {\n        // 文本的情况有点复杂：肯能包含{{}}\n        let text = node.text // a {{ name }} b{{age}}  c  ===》_v(\"a\" + _s(name) + \"b\" + _s(age) + \"c\")\n        let tokens = []\n        let match, index\n        // 每次的偏移量\n        let lastIndex = defaultTagRE.lastIndex = 0 // 正则的问题：lastIndex   let reg = /a/g reg.test('abc')\n        // 只要是全局匹配，就需要将lastIndex每次匹配的时候调到0处  \n        while (match = defaultTagRE.exec(text)) {\n            index = match.index\n            if (index > lastIndex) {\n                tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n            }\n            tokens.push(`_s(${match[1].trim()})`)\n            lastIndex = index + match[0].length\n        }\n        if (lastIndex < text.length) { // 最后的\n            tokens.push(JSON.stringify(text.slice(lastIndex)))\n        }\n        return `_v(${tokens.join('+')})`\n    }\n}\n\nfunction generate(el) {\n    let children = genChildren(el)\n    let code = `_c(\"${el.tag}\", ${\n        el.attrs.length ? getProps(el.attrs) : 'undefined'\n    }${\n        el.children ? `,${children}` : ''\n    })\n    `\n    return code\n}\n\n\n// 主要通过正则匹配加循环来完成的\n// 把一个HTML不停地循环拿出来后组成一棵树，这个树描述了我们当前的DOM结构\nexport function compilerToFunction(template) {\n    // 1、解析HTML字符串，将HTML字符串 -》ast语法树\n    let root = parseHTML(template)\n    // 2、需要将ast语法树生成最终的render函数    就是字符串拼接（模板引擎）\n    // console.log(root)\n\n    let code = generate(root)\n    // console.log(code)\n\n    // 核心思路：就是讲模板转换成 下面这段字符串\n    // <div id=\"app\"><p>hello {{name}}</p>hello</div>\n    // 将ast树 再次转成js的语法\n    // _c('div', {id: 'app'}, _c('p', _v('hello' + _s(name))), _v('hello'))\n\n    // 所有的模板引擎实现，都需要new Function() + with\n\n    let renderFn = new Function(`with(this) {return ${code}}`)\n    // console.log(renderFn)\n    // vue的render 返回的是虚拟DOM\n    return renderFn\n}\n\n// Vue实例为什么只能有一个根元素？\n// 在 Vue.js 2. x 版本中， 一个 Vue 实例只能有一个根元素， 这是因为 Vue.js 的模板编译器在编译模板时需要将模板编译为一个渲染函数， 并将这个渲染函数挂载到根元素上。 如果一个 Vue 实例有多个根元素， 那么模板编译器就无法将模板编译为一个渲染函数。\n// 在 Vue.js 3.x 版本中，这个限制已经被移除了。Vue.js 3.x 版本中可以在一个 Vue 实例中包含多个根元素，可以通过在根元素上使用 v-for、v-if 等指令来实现。在 Vue.js 3.x 版本中，一个 Vue 实例不再需要一个单一的根元素，而是将多个根元素封装在一个特殊的组件中，这个组件被称为 Fragment。\n{\n    /* <div id=\"app\">\n        <p>hello</p>\n    </div>\n把这个字符串转成这个对象。然后用这个对象来描述我们这个的HTML语法\n// 匹配到开头，它的开始标签start是一个div attrs:[], 匹配完了就没有任何意义了\nstart div attrs: [{name: 'id', value: 'app'}]\nstart p \ntext hello\nend p\nend div\n    ast\n    let root = {\n        tag: 'div',\n        attrs: [{name: 'id', value: 'app'}],\n        parent: null,\n        type: 1, // 元素类型 nodeType\n        children: [\n            {\n                tag: 'p',\n                attrs: [],\n                parent: root,\n                type: 1,\n                children: [\n                    {\n                        text: 'hello',\n                        type: 3\n                    }\n                ]\n            }\n        ]\n    } */\n    // 第二步：ast变成render函数\n}","class Watcher {\n    constructor(vm, exprOrFn, callback, options) {\n        this.vm = vm\n        this.callback = callback\n        this.options = options\n\n        this.getter = exprOrFn // 将内部传过来的回调函数 放到getter属性上\n\n        this.get()\n    }\n\n    get() {\n        this.getter() // 就是让updateComponent函数执行\n    }\n}\n\nexport default Watcher","/**\n * 初渲染或者更新\n * @param {*} oldVnode // 第一次是#app，第二次就是老的虚拟节点\n * @param {*} vnode  // 新的虚拟节点\n */\nexport function patch(oldVnode, vnode) {\n    console.log(oldVnode, vnode)\n    // 递归创建真实节点   替换掉老的节点\n    // 1、判断是更新还是渲染\n    const isRealElement = oldVnode.nodeType // 真实元素节点\n    if (isRealElement) {\n        const odlElm = oldVnode // div id=\"app\"老的真实节点\n        const parentElm = odlElm.parentNode // body 老的真实节点的父亲\n\n        let el = createElm(vnode)\n\n        parentElm.insertBefore(el, odlElm.nextSibling)\n        parentElm.removeChild(odlElm) // 删除老的节点\n    }\n}\n// 根据虚拟节点，创建真实节点\nfunction createElm(vnode) {\n    let {\n        tag,\n        children,\n        key,\n        data,\n        text\n    } = vnode\n    // 是标签就创建标签\n    if (typeof tag === 'string') {\n        vnode.el = document.createElement(tag)\n        updateProperties(vnode)\n        children.forEach(child => { // 递归创建儿子节点，将儿子节点放到父节点中\n            return vnode.el.appendChild(createElm(child))\n        })\n    } else {\n        // 如果不是标签就是文本\n        // 虚拟DOM上映射着真实DOM，方便后续更新操作\n        vnode.el = document.createTextNode(text)\n    }\n    return vnode.el\n}\n\n// 更新属性\nfunction updateProperties(vnode) {\n    let newProps = vnode.data\n    let el = vnode.el\n    console.log(newProps, el)\n    for (let key in newProps) {\n        if (key === 'style') {\n            for (let styleName in newProps.style) {\n                el.style[styleName] = newProps.style[styleName]\n            }\n        } else if (key === 'class') {\n            el.className = newProps.class\n        } else {\n            el.setAttribute(key, newProps[key])\n        }\n    }\n}","import Watcher from \"./observe/watcher\"\nimport {\n    patch\n} from './vdom/patch'\n\nexport function lifecycleMixin(Vue) {\n    // vnode虚拟节点\n    Vue.prototype._update = function (vnode) {\n        const vm = this\n        // 我要通过虚拟节点，渲染出真实的DOM\n        vm.$el = patch(vm.$el, vnode) // 需要用虚拟节点创建出真实节点  替换掉真实的$el\n        // console.log(vnode)\n    }\n}\n\nexport function mountComponent(vm, el) {\n    const options = vm.$options // render\n    vm.$el = el // 真实的DOM元素\n\n    console.log(options, vm.$el)\n    // 渲染页面\n\n    // 渲染方法\n    let updateComponent = () => { // 无论是渲染还是更新都会调用此方法\n        // _render() 返回虚拟DOM\n        // _update() 将虚拟DOM转换成真实的DOM\n        vm._update(vm._render())\n    }\n\n    // 怎么渲染呢？就是利用渲染watcher; 每个组件都有一个watcher\n    // () => {} ===> $watch(() => {}) 表示里面的回调函数\n    new Watcher(vm, updateComponent, () => {}, true) // true 表示它是一个渲染watcher\n}\n\n// Watcher 就是用来渲染的\n// vm._render 通过解析的render方法 渲染出虚拟DOM  _c _v _s\n// vm._update 通过虚拟DOM  创建真实的DOM","import {\n    initState\n} from \"./state\"\n\nimport {\n    compilerToFunction\n} from './compiler/index.js'\nimport {\n    mountComponent\n} from \"./lifecycle\"\n\n// 初始化\nexport function initMixin(Vue) {\n    Vue.prototype._init = function (options) {\n        // console.log('options', options)\n        // 在当前的实例上扩展一些属性$options $data...\n        // 为什么要定义这些属性？如果使用使用options的话，在其他扩展方法里拿不到。扩展一些属性，可以通过this拿到这个属性\n        // 为什么属性要以$开头，认为是Vue自己的属性。如果自己在data中用$定义变量，实例上拿不到的\n        const vm = this\n        vm.$options = options // 将用户的选项挂载实例上\n\n        // 初始化状态/数据（Vue中的状态：props、data、computed、methods、watch）\n        initState(vm)\n        // todo...模板编译、创建虚拟dom。。。\n\n\n        // 如果用户传了el属性，需要将页面渲染出来\n        // 如果用户传入了el，就要实现挂载流程\n        if (vm.$options.el) {\n            vm.$mount(vm.$options.el)\n        }\n    }\n\n    Vue.prototype.$mount = function (el) {\n        const vm = this\n        const options = vm.$options\n        el = document.querySelector(el)\n        // 默认会先查找render方法，-》template -> el的内容\n\n        if (!options.render) {\n            // 对模板进行编译\n            let template = options.template\n            if (!template && el) {\n                template = el.outerHTML\n            }\n            // console.log(template)\n            // 我们需要将template 转化成render函数\n            const render = compilerToFunction(template)\n            options.render = render\n        }\n\n        // 渲染当前的组件，挂载这个组件\n        mountComponent(vm, el)\n    }\n}\n\n// 状态初始化，和初始化没什么关系，需拆分单独管理\n// function initState(vm) {\n//     const opts = vm.$options\n//     // if (opts.props)\n//     if (opts.data) {\n//         initData(vm)\n//     }\n// }\n// function initData(vm) {\n//     let data = vm.$options.data\n//     // data可以是对象或函数[根使用可以是对象也可以是函数；组件一定是函数]（Vue3解决了，认为都是函数）\n//     data = typeof data === 'function' ? data.call(vm) : data\n//     console.log('data', data)\n// }","export function createElement(tag, data = {}, ...children) {\n    let key = data.key\n    if (key) {\n        delete data.key\n    }\n    return vnode(tag, data, key, children, undefined)\n}\n\nexport function createTextNode(text) {\n    return vnode(undefined, undefined, undefined, undefined, text)\n}\n\n/**\n * 产生虚拟节点\n * @param {*} tag 标签名\n * @param {*} data 属性\n * @param {*} key 做diff\n * @param {*} children 孩子\n * @param {*} text 文本\n */\nfunction vnode(tag, data, key, children, text) {\n\n    return {\n        tag,\n        data,\n        key,\n        children,\n        text\n    }\n}\n// 虚拟节点  就是通过_c _V实现用对象来描述dom的操作\n\n/**\n * 1、将template转换成ast语法树 -> 生成render函数 -> 生成虚拟DOM -> 真实的DOM\n * 重新生成虚拟DOM -> 更新DOM\n */","import {\n    createElement,\n    createTextNode\n} from \"./vdom/create-element\"\n\nexport function renderMixin(Vue) {\n    // _c 创建元素的虚拟节点\n    // _v 创建文本的虚拟节点\n    // _s JSON.stringify()\n    Vue.prototype._c = function () {\n        return createElement(...arguments) // tag, data, children...\n    }\n    Vue.prototype._v = function (text) {\n        return createTextNode(text)\n    }\n    // 把数据格式为字符串\n    Vue.prototype._s = function (val) {\n        return val === null ? '' : (typeof val === 'object' ? JSON.stringify(val) : val)\n    }\n    Vue.prototype._render = function () {\n        console.log('render')\n        const vm = this\n        const {\n            render\n        } = vm.$options\n        let vnode = render.call(vm) // 改变this指向\n\n\n        return vnode // 虚拟DOM\n    }\n}","// vue源码里没有直接使用class定义一个类。类的特点：将所有的方法都耦合在一起，功能越来越多，很难维护。vue在设计的时候使用构造函数，把扩展的内容挂载到原型上，放到不同的文件中，好维护。\n\nimport {\n    initMixin\n} from \"./init\"\nimport {\n    renderMixin\n} from './render'\nimport {\n    lifecycleMixin\n} from './lifecycle'\n\nfunction Vue(options) {\n    this._init(options)\n}\n\n// 初始化\ninitMixin(Vue) // 扩展了init方法\nrenderMixin(Vue)\nlifecycleMixin(Vue)\n// Vue.prototype._init = function () {\n\n// }\n// 把原型上方法扩展成一个个的函数，通过函数的方式，在其原型上扩展功能\n\nexport default Vue"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","_len","arguments","length","args","_key","result","call","apply","concat","inserted","ob","__ob__","slice","observeArray","Observer","data","_classCallCheck","defineProperty","value","enumerable","isArray","__proto__","walk","_createClass","key","keys","defineReactive","item","observe","target","get","console","log","set","newVal","_typeof","initState","vm","opts","$options","initData","proxy","_data","attribute","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","root","currentParent","stack","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","parent","start","element","push","chars","text","replace","end","pop","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","getProps","str","_loop","i","obj","split","_item$split","_item$split2","_slicedToArray","JSON","stringify","genChildren","el","map","c","gen","join","node","generate","tokens","index","lastIndex","exec","trim","code","compilerToFunction","template","renderFn","Function","Watcher","exprOrFn","callback","options","getter","patch","oldVnode","vnode","isRealElement","nodeType","odlElm","parentElm","parentNode","createElm","insertBefore","nextSibling","removeChild","document","createElement","updateProperties","child","appendChild","createTextNode","newProps","styleName","style","className","setAttribute","lifecycleMixin","Vue","_update","$el","mountComponent","updateComponent","_render","initMixin","_init","$mount","querySelector","render","outerHTML","undefined","renderMixin","_c","_v","_s","val"],"mappings":"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"}