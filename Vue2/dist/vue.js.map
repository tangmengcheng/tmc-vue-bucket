{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["// 重新数组中的部分方法\n\nlet oldArrayProto = Array.prototype // 获取数组的原型\n\n// Array.prototype.push = function() { 这样会把原来的push功能干掉了，我们需要原来的功能还在，此时我们可以拷贝一份\n// }\n\n// newArrayProto.__proto__ = oldArrayProto\nexport let newArrayProto = Object.create(oldArrayProto)\n\nlet methods = [\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'reserve',\n    'sort',\n    'splice'\n] // concat slice都不会改变原数组\n\nmethods.forEach(method => {\n    newArrayProto[method] = function (...args) { // 重写了数组的方法\n        const result = oldArrayProto[method].call(this, ...args) // 内部调用原来的方法，函数劫持。AOP\n        // this 就是 data\n        // 需要对新增的数据 再次进行劫持\n        let inserted;\n        let ob = this.__ob__\n        switch (method) {\n            case 'push':\n            case 'unshift': // arr.push(1, 2, 3)\n                inserted = args\n                break;\n            case 'splice': // arr.splice(0, 1, {}, {}...)\n                inserted = args.slice(2)\n            default:\n                break;\n        }\n        console.log('inserted', inserted) // 新增的内容\n        if (inserted) { // inserted是数组类型，观察数组，要调用observeArray方法\n            ob.observeArray(inserted)\n        }\n        return result\n    }\n})","import {\n    newArrayProto\n} from \"./array\"\n\nclass Observer {\n    constructor(data) {\n        // data.__ob__ = this; // this为observe,放在data的自定义__ob__属性上;这样的好处：给数组加了一个标识，如果数据上有__ob__，说明数据已经被观察过了\n\n        // 如果data不是数组是对象，这样给对象添加这个__ob__属性，然后去循环，会出现死循环\n\n        Object.defineProperty(data, '__ob__', {\n            value: this,\n            enumerable: false // 不可枚举（循环的时候，无法获取）\n        })\n\n\n        // Object.defineProperty只能劫持已存在的属性，对新增属性和删除属性不劫持（为此vue2单独写了一些API来解决$set $delete）\n        if (Array.isArray(data)) { // 如果是数组就有两种情况：第一：重写7个方法、第二：数组中的引用类型也需要劫持\n            // 重新数组中的方法，7个方法可以修改数组本身的。还有将数组中的引用类型也需要劫持\n            // data.__proto__ = { 不采用这种方式是因为会把原始的push给干掉了\n            //     push() {\n            //         console.log('重写的push')\n            //     }\n            data.__proto__ = newArrayProto // 拦截方法，并没有对新增的属性做劫持？\n            // } 保留数组原有的特性：concat join等，并且重新部分的方法\n            this.observeArray(data)\n        } else {\n            this.walk(data) // 遍历对象\n        }\n    }\n    walk(data) { // 循环对象 对属性依次劫持\n        // 拿到每个属性，“重新定义”每个属性，导致性能不好\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\n    }\n    observeArray(data) { // 将数组中的引用类型也需要劫持\n        data.forEach(item => observe(item))\n    }\n}\n\n// 闭包（get set方法 都能拿到value）\nexport function defineReactive(target, key, value) { // 属性劫持\n    observe(value) // value可能是对象，递归劫持。对所有的对象属性进行劫持\n    Object.defineProperty(target, key, {\n        get() { // 取值的时候会执行get\n            console.log('取值了')\n            return value\n        },\n        set(newVal) { // 设置值的时候会执行set\n            console.log('设置值了')\n            if (newVal === value) return\n            observe(newVal) // 有可能用户设置的值也是对象\n            value = newVal\n        }\n    })\n}\n\nexport function observe(data) {\n    // 对这个data对象进行劫持\n    if (typeof data !== 'object' || data === null) {\n        return // 只对对象进行劫持\n    }\n\n    if (data.__ob__ instanceof Observer) { // 说明这个对象已经被代理过了\n        return data.__ob__\n    }\n\n    // 如果一个对象被劫持过了，那就不要再被劫持了（如何判断一个对象是否被劫持过？可以新增一个实例，用实例来判断是否被劫持过）\n    return new Observer(data)\n}","import {\n    observe\n} from \"./observe/index.js\"\n\nexport function initState(vm) {\n    const opts = vm.$options\n    if (opts.data) {\n        initData(vm)\n    }\n}\n\nfunction proxy(vm, target, key) {\n    Object.defineProperty(vm, key, {\n        get() {\n            return vm[target][key] // vm.name === vm._data.name\n        },\n        set(newVal) {\n            vm[target][key] = newVal\n        }\n    })\n}\n\nfunction initData(vm) {\n    let data = vm.$options.data\n    data = typeof data === 'function' ? data.call(vm) : data\n\n    vm._data = data // 在实例上可以获取数据\n\n    // 拿到数据后，要对数据劫持。vue2里采用了一个api, defineProperty\n    observe(data) // 观测数据，单独\n\n    // 将vm._data用vm代理\n    for (let key in data) {\n        proxy(vm, '_data', key)\n    }\n}","import {\n    initState\n} from \"./state\"\n\n// 初始化\nexport function initMixin(Vue) {\n    Vue.prototype._init = function (options) {\n        console.log('options', options)\n        // 在当前的实例上扩展一些属性$options $data...\n        // 为什么要定义这些属性？如果使用使用options的话，在其他扩展方法里拿不到。扩展一些属性，可以通过this拿到这个属性\n        // 为什么属性要以$开头，认为是Vue自己的属性。如果自己在data中用$定义变量，实例上拿不到的\n        const vm = this\n        vm.$options = options // 将用户的选项挂载实例上\n\n        // 初始化状态/数据（Vue中的状态：props、data、computed、methods、watch）\n        initState(vm)\n        // todo...模板编译、创建虚拟dom。。。\n    }\n}\n\n// 状态初始化，和初始化没什么关系，需拆分单独管理\n// function initState(vm) {\n//     const opts = vm.$options\n//     // if (opts.props)\n//     if (opts.data) {\n//         initData(vm)\n//     }\n// }\n// function initData(vm) {\n//     let data = vm.$options.data\n//     // data可以是对象或函数[根使用可以是对象也可以是函数；组件一定是函数]（Vue3解决了，认为都是函数）\n//     data = typeof data === 'function' ? data.call(vm) : data\n//     console.log('data', data)\n// }","// vue源码里没有直接使用class定义一个类。类的特点：将所有的方法都耦合在一起，功能越来越多，很难维护。vue在设计的时候使用构造函数，把扩展的内容挂载到原型上，放到不同的文件中，好维护。\n\nimport {\n    initMixin\n} from \"./init\"\n\nfunction Vue(options) {\n    this._init(options)\n}\n\n// 初始化\ninitMixin(Vue) // 扩展了init方法\n// Vue.prototype._init = function () {\n\n// }\n// 把原型上方法扩展成一个个的函数，通过函数的方式，在其原型上扩展功能\n\nexport default Vue"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","_len","arguments","length","args","_key","result","call","apply","concat","inserted","ob","__ob__","slice","console","log","observeArray","Observer","data","_classCallCheck","defineProperty","value","enumerable","isArray","__proto__","walk","_createClass","key","keys","defineReactive","item","observe","target","get","set","newVal","_typeof","initState","vm","opts","$options","initData","proxy","_data","initMixin","Vue","_init","options"],"mappings":"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"}